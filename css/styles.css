/* Fun Children's Todo List Styles */

:root {
  --primary-color: #ff6b6b; /* Bright red-pink */
  --secondary-color: #f7d794; /* Sunny yellow */
  --accent-color: #6a89cc; /* Sky blue */
  --success-color: #60a3bc; /* Teal */
  --danger-color: #e66767; /* Red-orange */
  --text-color: #333;
  --background-color: #fffde7; /* Light yellow background */
  --star-color: #ffd166;
}

body {
  font-family: 'Comic Sans MS', 'Marker Felt', cursive, sans-serif;
  background-color: var(--background-color);
  margin: 0;
  padding: 0;
  min-height: 100vh;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40"><circle cx="20" cy="20" r="5" fill="%23ffeb3b"/></svg>');
  background-repeat: repeat;
  overflow-x: hidden;
}

/* Animated floating bubbles in background */
.bubble {
  position: fixed;
  border-radius: 50%;
  opacity: 0.3;
  pointer-events: none;
  animation: floatUp 30s linear infinite;
}

@keyframes floatUp {
  0% {
    transform: translateY(100vh) scale(0.5);
    opacity: 0;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    transform: translateY(-10vh) scale(1);
    opacity: 0;
  }
}

.container {
  max-width: 600px;
  margin: 50px auto;
  background: white;
  padding: 30px;
  border-radius: 20px;
  box-shadow: 0 0 20px rgba(0,0,0,0.1);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

/* Add multiple decorative elements */
.container::before {
  content: '';
  position: absolute;
  top: -20px;
  left: -20px;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, var(--secondary-color) 0%, var(--secondary-color) 40%, transparent 41%);
  border-radius: 50%;
  opacity: 0.3;
  z-index: 0;
}

.container::after {
  content: '';
  position: absolute;
  bottom: -30px;
  right: -30px;
  width: 150px;
  height: 150px;
  background: radial-gradient(circle, var(--accent-color) 0%, var(--accent-color) 40%, transparent 41%);
  border-radius: 50%;
  opacity: 0.2;
  z-index: 0;
}

/* Additional decorative element for stars */
.container span.star {
  position: absolute;
  background: radial-gradient(circle, var(--star-color) 0%, var(--star-color) 40%, transparent 41%);
  border-radius: 50%;
  width: 10px;
  height: 10px;
  opacity: 0.5;
  z-index: 0;
}

h1 {
  text-align: center;
  color: var(--primary-color);
  font-size: 2em;
  margin-bottom: 30px;
  position: relative;
  z-index: 1;
  transition: transform 0.3s ease;
}

/* Star icon decoration for heading with bounce effect */
h1::after {
  content: '‚≠ê';
  display: block;
  text-align: center;
  font-size: 1.5em;
  margin-top: 10px;
  animation: spinAndBounce 3s infinite ease-in-out;
}

@keyframes spinAndBounce {
  0% { transform: rotate(0deg) translateY(0); }
  50% { transform: rotate(180deg) translateY(-5px); }
  100% { transform: rotate(360deg) translateY(0); }
}

.input-group {
  display: flex;
  margin-bottom: 20px;
  background: #fff3e0;
  border-radius: 25px;
  padding: 5px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  z-index: 1;
  position: relative;
  overflow: hidden;
}

/* Animated sparkle effect inside input group */
.input-group::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 60%);
  transform: translate(-50%, -50%) rotate(0deg);
  animation: rotate 10s linear infinite;
  z-index: 0;
}

@keyframes rotate {
  from { transform: translate(-50%, -50%) rotate(0deg); }
  to { transform: translate(-50%, -50%) rotate(360deg); }
}

#taskInput {
  flex: 1;
  padding: 12px 20px;
  border: none;
  background: transparent;
  font-size: 1em;
  outline: none;
  z-index: 1;
  position: relative;
}

#addTaskBtn {
  padding: 12px 25px;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 20px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  z-index: 1;
  position: relative;
  overflow: hidden;
}

#addTaskBtn:hover {
  transform: scale(1.05) rotate(2deg);
  box-shadow: 0 6px 8px rgba(0,0,0,0.15);
}

/* Button sparkle effect on hover */
#addTaskBtn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300%;
  height: 300%;
  background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 60%);
  transform: translate(-50%, -50%) rotate(0deg);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

#addTaskBtn:hover::after {
  opacity: 1;
  animation: rotate 1s linear forwards;
}

#taskList {
  list-style-type: none;
  padding: 0;
  z-index: 1;
  position: relative;
}

.task-item {
  background: #ffffff;
  padding: 15px;
  border-bottom: 2px dashed var(--secondary-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 15px;
  margin-bottom: 15px;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  z-index: 1;
  position: relative;
  overflow: hidden;
}

.task-item:hover {
  transform: translateX(5px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* Task item shine effect on hover */
.task-item::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 60%);
  transform: rotate(45deg);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.task-item:hover::before {
  opacity: 1;
  animation: shine 1s ease-in-out;
}

@keyframes shine {
  0% { transform: translate(-50%, -50%) rotate(45deg) scale(0); }
  50% { transform: translate(-50%, -50%) rotate(45deg) scale(1); }
  100% { transform: translate(-50%, -50%) rotate(45deg) scale(0); }
}

.task-text {
  flex: 1;
  margin-right: 10px;
  font-size: 1.1em;
  transition: transform 0.3s ease;
}

.task-text.completed {
  text-decoration: line-through;
  color: #999;
  font-style: italic;
  transform: rotate(-5deg);
}

.button-group {
  display: flex;
  gap: 8px;
}

.task-btn {
  border: none;
  padding: 8px 12px;
  border-radius: 20px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  z-index: 1;
  position: relative;
  overflow: hidden;
}

.task-btn:hover {
  transform: scale(1.1) rotate(3deg);
}

.task-btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300%;
  height: 300%;
  background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 60%);
  transform: translate(-50%, -50%) rotate(0deg);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.task-btn:hover::after {
  opacity: 1;
  animation: rotate 1s linear forwards;
}

.complete-btn {
  background: var(--success-color);
  color: white;
}

.complete-btn:hover {
  background: #4a90a2;
}

.delete-btn {
  background: var(--danger-color);
  color: white;
}

.delete-btn:hover {
  background: #d34e4e;
}

/* Confetti animation for completed tasks */
@keyframes confetti {
  0% { transform: translateY(0) rotate(0); opacity: 1; }
  100% { transform: translateY(50px) rotate(360deg); opacity: 0; }
}

.confetti-piece {
  position: absolute;
  width: 10px;
  height: 10px;
  animation: confetti 1s ease-out forwards;
}

/* Task counter styles */
.task-count {
  text-align: center;
  margin: 20px 0 30px 0;
  font-size: 1.2em;
  color: var(--text-color);
  z-index: 1;
  position: relative;
}

/* Fun animal icons for common tasks */
.task-icon {
  display: inline-block;
  width: 24px;
  height: 24px;
  vertical-align: middle;
  margin-right: 8px;
  background-size: contain;
  background-repeat: no-repeat;
  transition: transform 0.3s ease;
}

.task-item.homework .task-icon {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%236a89cc" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path></svg>');
}

.task-item.playtime .task-icon {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23ff6b6b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon></svg>');
}

.task-item.bedtime .task-icon {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f7d794" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="6" width="20" height="8" rx="2"></rect><line x1="12" y1="14" x2="12" y2="22"></line><line x1="6" y1="18" x2="6" y2="22"></line><line x1="18" y1="18" x2="18" y2="22"></line></svg>');
}

.task-item.chore .task-icon {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%236a89cc" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path></svg>');
}

/* Animation for adding new tasks */
@keyframes popIn {
  0% { transform: scale(0.5) translateY(20px); opacity: 0; }
  100% { transform: scale(1) translateY(0); opacity: 1; }
}

.new-task {
  animation: popIn 0.3s ease-out;
}

/* Responsive design */
@media (max-width: 600px) {
  h1 {
    font-size: 1.5em;
  }
  
  .container {
    margin: 20px 10px;
    padding: 20px;
  }
  
  #taskInput {
    padding: 10px;
  }
  
  #addTaskBtn {
    padding: 10px 15px;
    font-size: 0.9em;
  }
}

/* Add some fun emojis to buttons */
.complete-btn::after {
  content: ' üéâ';
  margin-left: 5px;
}

.delete-btn::after {
  content: ' üóëÔ∏è';
  margin-left: 5px;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Reward message styling */
#rewardMessage {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--success-color);
  color: white;
  padding: 15px 30px;
  border-radius: 30px;
  font-size: 1.2em;
  font-weight: bold;
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: 1000;
  border: 3px solid #fff;
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  animation: bounceDown 0.5s ease-out;
}

#rewardMessage.show {
  opacity: 1;
}

@keyframes bounceDown {
  0% { transform: translateX(-50%) translateY(-20px); opacity: 0; }
  100% { transform: translateX(-50%) translateY(0); opacity: 1; }
}

/* Achievement notification styling */
#achievementNotification {
  position: fixed;
  top: 80px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--primary-color);
  color: white;
  padding: 15px 30px;
  border-radius: 30px;
  font-size: 1.2em;
  font-weight: bold;
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: 1000;
  border: 3px solid #fff;
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  animation: popUp 0.3s ease-out;
}

#achievementNotification.show {
  opacity: 1;
}

@keyframes popUp {
  0% { transform: translateX(-50%) scale(0.5); opacity: 0; }
  100% { transform: translateX(-50%) scale(1); opacity: 1; }
}

/* Sticker collection styling */
.sticker-collection {
  text-align: center;
  margin-top: 30px;
  font-size: 1.2em;
  color: var(--text-color);
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  z-index: 1;
  position: relative;
}

.sticker-collection::before {
  content: 'üèÜ';
  font-size: 1.5em;
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

/* Sticker animation */
.sticker {
  display: inline-block;
  animation: float 3s ease-in-out infinite;
  font-size: 2em;
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

/* Background cloud animation */
.cloud {
  position: fixed;
  top: -100px;
  width: 200px;
  height: 60px;
  background: #fff;
  border-radius: 50%;
  opacity: 0.3;
  z-index: 0;
  animation: cloudMove 120s linear infinite;
}

.cloud::before,
.cloud::after {
  content: '';
  position: absolute;
  background: #fff;
  border-radius: 50%;
}

.cloud::before {
  width: 120px;
  height: 120px;
  top: -60px;
  left: 40px;
}

.cloud::after {
  width: 100px;
  height: 100px;
  top: -30px;
  left: 100px;
}

@keyframes cloudMove {
  0% {
    transform: translateX(-200px) translateY(0);
    opacity: 0;
  }
  50% {
    opacity: 0.2;
  }
  100% {
    transform: translateX(100vw) translateY(200px);
    opacity: 0;
  }
}

/* Task category animations */
.task-item.homework:hover .task-icon {
  transform: rotate(360deg);
  animation: spin 5s linear infinite;
}

.task-item.playtime:hover .task-icon {
  animation: bounceIcon 1s infinite;
}

@keyframes bounceIcon {
  0% { transform: translateY(0); }
  50% { transform: translateY(-5px); }
  100% { transform: translateY(0); }
}

.task-item.bedtime:hover .task-icon {
  animation: floatIcon 2s ease-in-out infinite;
}

@keyframes floatIcon {
  0% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0); }
}

.task-item.chore:hover .task-icon {
  animation: spinAndScale 2s infinite ease-in-out;
}

@keyframes spinAndScale {
  0% { transform: rotate(0deg) scale(1); }
  50% { transform: rotate(180deg) scale(1.2); }
  100% { transform: rotate(360deg) scale(1); }
}

/* Haptic feedback classes for tactile effects */
.pressed {
  transform: scale(0.95);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

/* Floating elements container */
.floating-elements {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 0;
}

/* Custom checkbox styling for task completion */
.task-checkbox {
  appearance: none;
  -webkit-appearance: none;
  width: 24px;
  height: 24px;
  background-color: #eee;
  border-radius: 50%;
  position: relative;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.task-checkbox:checked {
  background-color: var(--success-color);
}

.task-checkbox:checked::after {
  content: '‚úî';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 14px;
  animation: pop 0.3s ease;
}

@keyframes pop {
  0% { transform: translate(-50%, -50%) scale(0); }
  100% { transform: translate(-50%, -50%) scale(1); }
}

/* Task dragging effect */
.draggable {
  transition: transform 0.2s ease;
}

.draggable:active {
  transform: scale(1.05);
  z-index: 10;
}